#!/usr/bin/env ruby

# vim: set tabstop=2 shiftwidth=2 softtabstop=2 cc=100;

require "geoloader"
require "commander/import"
require "yaml"
require "terminal-table"
require "resque"

program :version, "0.0.1"
program :description, "Load GeoTIFFs and Shapefiles into PostGIS, Geoserver, and Solr."

#
# Load a batch manifest or an individual GeoTIFF / Shapefile.
#
command :load do |c|
  c.syntax  = "geoloader load [filename]"
  c.summary = "Load a YAML batch manifest."
  c.option  "-q", "--resque", "Push jobs onto Resque."
  c.action do |args, options|

    options.default :resque => false

    # Read the manifest.
    manifest_path = File.expand_path(args[0])
    manifest = YAML::load(File.read(manifest_path))

    # For each matched file in the manifest:
    Dir.glob("#{File.dirname(manifest_path)}/#{manifest["files"]}") do |f|

      # Get a loader class.
      loader = case File.extname(f)
      when ".shp" then
        Geoloader::ShapefileLoader
      when ".tif"
        Geoloader::GeotiffLoader
      else
        next
      end

      # Execute / enqueue.
      if options.resque
        Resque.enqueue(loader, f, manifest)
      else
        loader.new(f, manifest).load
      end

    end

  end
end

#
# Delete all databases, stores, and documents in a workspace.
#
command :clear do |c|
  c.syntax  = "geoloader clear [workspace]"
  c.summary = "Clear a workspace."
  c.action do |args, options|

    # Delete Geoserver stores.
    Geoloader::Geoserver.new.delete_workspace(args[0])

    # Drop PostGIS tables.
    Geoloader::Postgres.new.drop_databases_by_workspace(args[0])

    # Delete Solr documents.
    Geoloader::Solr.new.delete_by_workspace(args[0])

  end
end

#
# Show a list of all workspaces with document counts.
#
command :list do |c|
  c.syntax  = "geoloader list"
  c.summary = "List workspaces."
  c.action do |args, options|

    # Query for workspace counts. 
    counts = Geoloader::Solr.new.get_workspace_counts

    # Pretty-print the table.
    puts Terminal::Table.new(
      :title    => "GEOLOADER",
      :headings => ["Workspace", "# Assets"],
      :rows     => counts
    )

  end
end

#
# Spin up a Resque worker.
#
command :work do |c|
  c.syntax  = "geoloader work"
  c.summary = "Start a Resque worker."
  c.action do |args, options|
    Resque::Worker.new("geoloader").work
  end
end
