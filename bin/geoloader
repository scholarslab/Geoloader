#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'geoloader'

program :version, '0.0.1'
program :description, 'Load GeoTIFFs and Shapefiles into Geonetwork, Geoserver, and PostgreSQL'

command :load do |c|
  c.syntax = 'geoloader load [filename]'
  c.summary = 'Load a Geotiff (.tif) or Shapefile (.shp).'
  c.action do |args, options|

    Geoloader.configure("~/.geoloader/config.yaml")

    case File.extname(args[0])
    when ".tif"
      loader = Geoloader::GeotiffLoader.new(args[0])
      loader.load
    when ".shp"
      loader = Geoloader::ShapefileLoader.new(args[0])
      loader.load
    end

  end
end

command :unload do |c|
  c.syntax = 'geoloader unload [filename]'
  c.summary = 'Unload a Geotiff (.tif) or Shapefile (.shp).'
  c.action do |args, options|

    Geoloader.configure("~/.geoloader/config.yaml")

    case File.extname(args[0])
    when ".tif"
      loader = Geoloader::GeotiffLoader.new(args[0])
      loader.unload
    when ".shp"
      loader = Geoloader::ShapefileLoader.new(args[0])
      loader.unload
    end

  end
end

command :reload do |c|
  c.syntax = 'geoloader reload [filename]'
  c.summary = 'Reload a Geotiff (.tif) or Shapefile (.shp).'
  c.action do |args, options|

    Geoloader.configure("~/.geoloader/config.yaml")

    case File.extname(args[0])
    when ".tif"
      loader = Geoloader::GeotiffLoader.new(args[0])
      loader.unload
      loader.load
    when ".shp"
      loader = Geoloader::ShapefileLoader.new(args[0])
      loader.unload
      loader.load
    end

  end
end

command :test do |c|
  c.action do |args, options|
    Geoloader.configure("~/.geoloader/config.yaml")
    geoserver = Geoloader::Geoserver.new
    puts geoserver.workspace_exists?("test")
  end
end
